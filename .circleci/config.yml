version: 2.1

# Définir les orbs
orbs:
  codecov: codecov/codecov@4.0.1

# Définir un job pour compiler et tester l'application
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:17.0
      - image: cimg/base:stable
    steps:
      - checkout  # Récupérer le code
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - run:
          name: Test
          command: mvn test
      - run:
          name: Jacoco file generation
          command: mvn jacoco:report
      - codecov/upload:
          file: target/site/jacoco/jacoco.xml
      - run:
          name: Générer le rapport Checkstyle
          command: |
            mvn checkstyle:checkstyle site

  deploy-to-gh-pages:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout  # Récupérer le code
      - run:
          name: Déployer sur GitHub Pages
          command: |
            # Vérifier si le fichier checkstyle.html est présent
            ls -l target/site/checkstyle.html
            
            git config --global "user.name" "SwanNOBILI"
            git config --global "user.email" "nobili.swan@gmail.com"
            git fetch --all
            git checkout gh-pages  # Passer à la branche gh-pages

            # Copier le fichier généré dans la branche gh-pages
            mkdir -p checkstyle
            cp target/site/checkstyle.html checkstyle/index.html  # Copier le fichier dans le répertoire checkstyle/index.html

            # Ajouter, commettre et pousser la mise à jour
            git add checkstyle
            git commit -m "Mise à jour du rapport Checkstyle"
            git push origin gh-pages  # Pousser les changements sur la branche gh-pages

# Workflow pour orchestrer les jobs
workflows:
  version: 2
  build-and-upload:
    jobs:
      - build-and-test  # Exécuter d'abord le job de construction et tests
      - deploy-to-gh-pages:
          requires:
            - build-and-test  # Le déploiement ne doit être effectué qu'après la génération du rapport